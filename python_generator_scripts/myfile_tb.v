reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg0;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg1;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg2;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg3;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg4;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg5;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg6;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg7;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg8;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg9;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg10;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg11;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg12;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg13;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg14;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg15;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg16;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg17;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg18;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg19;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg20;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg21;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg22;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg23;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg24;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg25;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg26;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg27;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg28;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg29;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg30;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg31;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg32;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg33;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg34;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg35;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg36;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg37;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg38;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg39;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg40;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg41;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg42;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg43;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg44;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg45;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg46;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg47;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg48;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg49;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg50;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg51;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg52;
reg [C_S_AXI_DATA_WIDTH-1:0] slv_reg53;


initial begin
    slv_reg1 <= 860187;
    slv_reg2 <= 16790016;
    slv_reg3 <= 500;
    slv_reg4 <= 250;
    slv_reg5 <= 1999;
    slv_reg6 <= 0;
    slv_reg7 <= 0;
    slv_reg8 <= 0;
    slv_reg9 <= 0;
    slv_reg10 <= 0;
    slv_reg11 <= 0;
    slv_reg12 <= 0;
    slv_reg13 <= 0;
    slv_reg14 <= 0;
    slv_reg15 <= 117440769;
    slv_reg16 <= 5000;
    slv_reg17 <= 2500;
    slv_reg18 <= 1999;
    slv_reg19 <= 458753;
    slv_reg20 <= 0;
    slv_reg21 <= 0;
    slv_reg22 <= 0;
    slv_reg23 <= 0;
    slv_reg24 <= 0;
    slv_reg25 <= 0;
    slv_reg26 <= 0;
    slv_reg27 <= 0;
    slv_reg28 <= 184549634;
    slv_reg29 <= 5000;
    slv_reg30 <= 3250;
    slv_reg31 <= 1999;
    slv_reg32 <= 852218;
    slv_reg33 <= 5535;
    slv_reg34 <= 0;
    slv_reg35 <= 0;
    slv_reg36 <= 0;
    slv_reg37 <= 0;
    slv_reg38 <= 0;
    slv_reg39 <= 0;
    slv_reg40 <= 0;
    slv_reg41 <= 3;
    slv_reg42 <= 0;
    slv_reg43 <= 0;
    slv_reg44 <= 0;
    slv_reg45 <= 0;
    slv_reg46 <= 0;
    slv_reg47 <= 0;
    slv_reg48 <= 0;
    slv_reg49 <= 0;
    slv_reg50 <= 0;
    slv_reg51 <= 0;
    slv_reg52 <= 0;
    slv_reg53 <= 0;
end

reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg0, steady_slv_reg0;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg1, steady_slv_reg1;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg2, steady_slv_reg2;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg3, steady_slv_reg3;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg4, steady_slv_reg4;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg5, steady_slv_reg5;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg6, steady_slv_reg6;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg7, steady_slv_reg7;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg8, steady_slv_reg8;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg9, steady_slv_reg9;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg10, steady_slv_reg10;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg11, steady_slv_reg11;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg12, steady_slv_reg12;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg13, steady_slv_reg13;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg14, steady_slv_reg14;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg15, steady_slv_reg15;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg16, steady_slv_reg16;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg17, steady_slv_reg17;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg18, steady_slv_reg18;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg19, steady_slv_reg19;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg20, steady_slv_reg20;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg21, steady_slv_reg21;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg22, steady_slv_reg22;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg23, steady_slv_reg23;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg24, steady_slv_reg24;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg25, steady_slv_reg25;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg26, steady_slv_reg26;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg27, steady_slv_reg27;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg28, steady_slv_reg28;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg29, steady_slv_reg29;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg30, steady_slv_reg30;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg31, steady_slv_reg31;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg32, steady_slv_reg32;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg33, steady_slv_reg33;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg34, steady_slv_reg34;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg35, steady_slv_reg35;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg36, steady_slv_reg36;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg37, steady_slv_reg37;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg38, steady_slv_reg38;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg39, steady_slv_reg39;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg40, steady_slv_reg40;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg41, steady_slv_reg41;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg42, steady_slv_reg42;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg43, steady_slv_reg43;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg44, steady_slv_reg44;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg45, steady_slv_reg45;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg46, steady_slv_reg46;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg47, steady_slv_reg47;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg48, steady_slv_reg48;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg49, steady_slv_reg49;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg50, steady_slv_reg50;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg51, steady_slv_reg51;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg52, steady_slv_reg52;
reg [C_S_AXI_DATA_WIDTH-1:0] sync_slv_reg53, steady_slv_reg53;


always @(posedge M_AXIS_CLK) begin
    sync_slv_reg0 <= slv_reg0;
    steady_slv_reg0 <= sync_slv_reg0;
	sync_slv_reg1 <= slv_reg1;
	steady_slv_reg1 <= sync_slv_reg1;
    sync_slv_reg2 <= slv_reg2;
    steady_slv_reg2 <= sync_slv_reg2;
    sync_slv_reg3 <= slv_reg3;
    steady_slv_reg3 <= sync_slv_reg3;
    sync_slv_reg4 <= slv_reg4;
    steady_slv_reg4 <= sync_slv_reg4;
    sync_slv_reg5 <= slv_reg5;
    steady_slv_reg5 <= sync_slv_reg5;
    sync_slv_reg6 <= slv_reg6;
    steady_slv_reg6 <= sync_slv_reg6;
    sync_slv_reg7 <= slv_reg7;
    steady_slv_reg7 <= sync_slv_reg7;
    sync_slv_reg8 <= slv_reg8;
    steady_slv_reg8 <= sync_slv_reg8;
    sync_slv_reg9 <= slv_reg9;
    steady_slv_reg9 <= sync_slv_reg9;
    sync_slv_reg10 <= slv_reg10;
    steady_slv_reg10 <= sync_slv_reg10;
    sync_slv_reg11 <= slv_reg11;
    steady_slv_reg11 <= sync_slv_reg11;
    sync_slv_reg12 <= slv_reg12;
    steady_slv_reg12 <= sync_slv_reg12;
    sync_slv_reg13 <= slv_reg13;
    steady_slv_reg13 <= sync_slv_reg13;
    sync_slv_reg14 <= slv_reg14;
    steady_slv_reg14 <= sync_slv_reg14;
    sync_slv_reg15 <= slv_reg15;
    steady_slv_reg15 <= sync_slv_reg15;
    sync_slv_reg16 <= slv_reg16;
    steady_slv_reg16 <= sync_slv_reg16;
    sync_slv_reg17 <= slv_reg17;
    steady_slv_reg17 <= sync_slv_reg17;
    sync_slv_reg18 <= slv_reg18;
    steady_slv_reg18 <= sync_slv_reg18;
    sync_slv_reg19 <= slv_reg19;
    steady_slv_reg19 <= sync_slv_reg19;
    sync_slv_reg20 <= slv_reg20;
    steady_slv_reg20 <= sync_slv_reg20;
    sync_slv_reg21 <= slv_reg21;
    steady_slv_reg21 <= sync_slv_reg21;
    sync_slv_reg22 <= slv_reg22;
    steady_slv_reg22 <= sync_slv_reg22;
    sync_slv_reg23 <= slv_reg23;
    steady_slv_reg23 <= sync_slv_reg23;
    sync_slv_reg24 <= slv_reg24;
    steady_slv_reg24 <= sync_slv_reg24;
    sync_slv_reg25 <= slv_reg25;
    steady_slv_reg25 <= sync_slv_reg25;
    sync_slv_reg26 <= slv_reg26;
    steady_slv_reg26 <= sync_slv_reg26;
    sync_slv_reg27 <= slv_reg27;
    steady_slv_reg27 <= sync_slv_reg27;
    sync_slv_reg28 <= slv_reg28;
    steady_slv_reg28 <= sync_slv_reg28;
    sync_slv_reg29 <= slv_reg29;
    steady_slv_reg29 <= sync_slv_reg29;
    sync_slv_reg30 <= slv_reg30;
    steady_slv_reg30 <= sync_slv_reg30;
    sync_slv_reg31 <= slv_reg31;
    steady_slv_reg31 <= sync_slv_reg31;
    sync_slv_reg32 <= slv_reg32;
    steady_slv_reg32 <= sync_slv_reg32;
    sync_slv_reg33 <= slv_reg33;
    steady_slv_reg33 <= sync_slv_reg33;
    sync_slv_reg34 <= slv_reg34;
    steady_slv_reg34 <= sync_slv_reg34;
    sync_slv_reg35 <= slv_reg35;
    steady_slv_reg35 <= sync_slv_reg35;
    sync_slv_reg36 <= slv_reg36;
    steady_slv_reg36 <= sync_slv_reg36;
    sync_slv_reg37 <= slv_reg37;
    steady_slv_reg37 <= sync_slv_reg37;
    sync_slv_reg38 <= slv_reg38;
    steady_slv_reg38 <= sync_slv_reg38;
    sync_slv_reg39 <= slv_reg39;
    steady_slv_reg39 <= sync_slv_reg39;
    sync_slv_reg40 <= slv_reg40;
    steady_slv_reg40 <= sync_slv_reg40;
    sync_slv_reg41 <= slv_reg41;
    steady_slv_reg41 <= sync_slv_reg41;
    sync_slv_reg42 <= slv_reg42;
    steady_slv_reg42 <= sync_slv_reg42;
    sync_slv_reg43 <= slv_reg43;
    steady_slv_reg43 <= sync_slv_reg43;
    sync_slv_reg44 <= slv_reg44;
    steady_slv_reg44 <= sync_slv_reg44;
    sync_slv_reg45 <= slv_reg45;
    steady_slv_reg45 <= sync_slv_reg45;
    sync_slv_reg46 <= slv_reg46;
    steady_slv_reg46 <= sync_slv_reg46;
    sync_slv_reg47 <= slv_reg47;
    steady_slv_reg47 <= sync_slv_reg47;
    sync_slv_reg48 <= slv_reg48;
    steady_slv_reg48 <= sync_slv_reg48;
    sync_slv_reg49 <= slv_reg49;
    steady_slv_reg49 <= sync_slv_reg49;
    sync_slv_reg50 <= slv_reg50;
    steady_slv_reg50 <= sync_slv_reg50;
    sync_slv_reg51 <= slv_reg51;
    steady_slv_reg51 <= sync_slv_reg51;
    sync_slv_reg52 <= slv_reg52;
    steady_slv_reg52 <= sync_slv_reg52;
    sync_slv_reg53 <= slv_reg53;
    steady_slv_reg53 <= sync_slv_reg53;
end

wire [7:0] WAVEFORM_INDEX[3:0];
wire [15:0] NUM_PULSE_PER_BURST[3:0];
wire [0:0] MOD_POLARITY[3:0];
wire [0:0] SINGLE_OR_BURST[3:0];
wire [1:0] WAVEFORM_TYPE[3:0];
wire [31:0] NUM_CLK_CYCLES_PRI[3:0];
wire [31:0] NUM_CLK_CYCLES_ON[3:0];
wire [15:0] PHZ_INC_START[3:0];
wire [15:0] PHZ_INC_OFFSET[3:0];
wire [15:0] NUM_CLK_CYCLES_BW_MOD[3:0];
wire [15:0] PHZ_INC_INC[3:0];
wire [255:0] BPSK_SEQ[3:0];

// Control Fields
wire [0:0] START_STOP_CTRL; assign START_STOP_CTRL = steady_slv_reg0[0:0];
wire [0:0] RESET_N; assign RESET_N = steady_slv_reg0[1:1];


// Global Fields
wire [1:0] NUM_WF; assign NUM_WF = steady_slv_reg1[1:0];
wire [7:0] NUM_WF_SEQ; assign NUM_WF_SEQ = steady_slv_reg1[9:2];
wire [0:0] IS_RANDOM; assign IS_RANDOM = steady_slv_reg1[10:10];
wire [10:0] WF_SEQ; assign WF_SEQ = steady_slv_reg1[21:11];


// Waveform Specific Fields
assign WAVEFORM_INDEX[0] = steady_slv_reg2[7:0];
assign NUM_PULSE_PER_BURST[0] = steady_slv_reg2[23:8];
assign MOD_POLARITY[0] = steady_slv_reg2[24:24];
assign SINGLE_OR_BURST[0] = steady_slv_reg2[25:25];
assign WAVEFORM_TYPE[0] = steady_slv_reg2[27:26];
assign NUM_CLK_CYCLES_PRI[0] = steady_slv_reg3[31:0];
assign NUM_CLK_CYCLES_ON[0] = steady_slv_reg4[31:0];
assign PHZ_INC_START[0] = steady_slv_reg5[15:0];
assign PHZ_INC_OFFSET[0] = steady_slv_reg5[31:16];
assign NUM_CLK_CYCLES_BW_MOD[0] = steady_slv_reg6[15:0];
assign PHZ_INC_INC[0] = steady_slv_reg6[31:16];
assign BPSK_SEQ[0] = {steady_slv_reg14[31:0], steady_slv_reg13[31:0], steady_slv_reg12[31:0], steady_slv_reg11[31:0], steady_slv_reg10[31:0], steady_slv_reg9[31:0], steady_slv_reg8[31:0], steady_slv_reg7[31:0]};


assign WAVEFORM_INDEX[1] = steady_slv_reg15[7:0];
assign NUM_PULSE_PER_BURST[1] = steady_slv_reg15[23:8];
assign MOD_POLARITY[1] = steady_slv_reg15[24:24];
assign SINGLE_OR_BURST[1] = steady_slv_reg15[25:25];
assign WAVEFORM_TYPE[1] = steady_slv_reg15[27:26];
assign NUM_CLK_CYCLES_PRI[1] = steady_slv_reg16[31:0];
assign NUM_CLK_CYCLES_ON[1] = steady_slv_reg17[31:0];
assign PHZ_INC_START[1] = steady_slv_reg18[15:0];
assign PHZ_INC_OFFSET[1] = steady_slv_reg18[31:16];
assign NUM_CLK_CYCLES_BW_MOD[1] = steady_slv_reg19[15:0];
assign PHZ_INC_INC[1] = steady_slv_reg19[31:16];
assign BPSK_SEQ[1] = {steady_slv_reg27[31:0], steady_slv_reg26[31:0], steady_slv_reg25[31:0], steady_slv_reg24[31:0], steady_slv_reg23[31:0], steady_slv_reg22[31:0], steady_slv_reg21[31:0], steady_slv_reg20[31:0]};


assign WAVEFORM_INDEX[2] = steady_slv_reg28[7:0];
assign NUM_PULSE_PER_BURST[2] = steady_slv_reg28[23:8];
assign MOD_POLARITY[2] = steady_slv_reg28[24:24];
assign SINGLE_OR_BURST[2] = steady_slv_reg28[25:25];
assign WAVEFORM_TYPE[2] = steady_slv_reg28[27:26];
assign NUM_CLK_CYCLES_PRI[2] = steady_slv_reg29[31:0];
assign NUM_CLK_CYCLES_ON[2] = steady_slv_reg30[31:0];
assign PHZ_INC_START[2] = steady_slv_reg31[15:0];
assign PHZ_INC_OFFSET[2] = steady_slv_reg31[31:16];
assign NUM_CLK_CYCLES_BW_MOD[2] = steady_slv_reg32[15:0];
assign PHZ_INC_INC[2] = steady_slv_reg32[31:16];
assign BPSK_SEQ[2] = {steady_slv_reg40[31:0], steady_slv_reg39[31:0], steady_slv_reg38[31:0], steady_slv_reg37[31:0], steady_slv_reg36[31:0], steady_slv_reg35[31:0], steady_slv_reg34[31:0], steady_slv_reg33[31:0]};


assign WAVEFORM_INDEX[3] = steady_slv_reg41[7:0];
assign NUM_PULSE_PER_BURST[3] = steady_slv_reg41[23:8];
assign MOD_POLARITY[3] = steady_slv_reg41[24:24];
assign SINGLE_OR_BURST[3] = steady_slv_reg41[25:25];
assign WAVEFORM_TYPE[3] = steady_slv_reg41[27:26];
assign NUM_CLK_CYCLES_PRI[3] = steady_slv_reg42[31:0];
assign NUM_CLK_CYCLES_ON[3] = steady_slv_reg43[31:0];
assign PHZ_INC_START[3] = steady_slv_reg44[15:0];
assign PHZ_INC_OFFSET[3] = steady_slv_reg44[31:16];
assign NUM_CLK_CYCLES_BW_MOD[3] = steady_slv_reg45[15:0];
assign PHZ_INC_INC[3] = steady_slv_reg45[31:16];
assign BPSK_SEQ[3] = {steady_slv_reg53[31:0], steady_slv_reg52[31:0], steady_slv_reg51[31:0], steady_slv_reg50[31:0], steady_slv_reg49[31:0], steady_slv_reg48[31:0], steady_slv_reg47[31:0], steady_slv_reg46[31:0]};

